/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as UsersAddImport } from './routes/users/add'
import { Route as UsersUserIdImport } from './routes/users/$userId'
import { Route as SubmissionsSubmissions5Import } from './routes/Submissions/Submissions5'
import { Route as SubmissionsSubmissions4Import } from './routes/Submissions/Submissions4'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const UsersAddRoute = UsersAddImport.update({
  id: '/users/add',
  path: '/users/add',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdRoute = UsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => rootRoute,
} as any)

const SubmissionsSubmissions5Route = SubmissionsSubmissions5Import.update({
  id: '/Submissions/Submissions5',
  path: '/Submissions/Submissions5',
  getParentRoute: () => rootRoute,
} as any)

const SubmissionsSubmissions4Route = SubmissionsSubmissions4Import.update({
  id: '/Submissions/Submissions4',
  path: '/Submissions/Submissions4',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Submissions/Submissions4': {
      id: '/Submissions/Submissions4'
      path: '/Submissions/Submissions4'
      fullPath: '/Submissions/Submissions4'
      preLoaderRoute: typeof SubmissionsSubmissions4Import
      parentRoute: typeof rootRoute
    }
    '/Submissions/Submissions5': {
      id: '/Submissions/Submissions5'
      path: '/Submissions/Submissions5'
      fullPath: '/Submissions/Submissions5'
      preLoaderRoute: typeof SubmissionsSubmissions5Import
      parentRoute: typeof rootRoute
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdImport
      parentRoute: typeof rootRoute
    }
    '/users/add': {
      id: '/users/add'
      path: '/users/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof UsersAddImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Submissions/Submissions4': typeof SubmissionsSubmissions4Route
  '/Submissions/Submissions5': typeof SubmissionsSubmissions5Route
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users': typeof UsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Submissions/Submissions4': typeof SubmissionsSubmissions4Route
  '/Submissions/Submissions5': typeof SubmissionsSubmissions5Route
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users': typeof UsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Submissions/Submissions4': typeof SubmissionsSubmissions4Route
  '/Submissions/Submissions5': typeof SubmissionsSubmissions5Route
  '/users/$userId': typeof UsersUserIdRoute
  '/users/add': typeof UsersAddRoute
  '/users/': typeof UsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Submissions/Submissions4'
    | '/Submissions/Submissions5'
    | '/users/$userId'
    | '/users/add'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Submissions/Submissions4'
    | '/Submissions/Submissions5'
    | '/users/$userId'
    | '/users/add'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/Submissions/Submissions4'
    | '/Submissions/Submissions5'
    | '/users/$userId'
    | '/users/add'
    | '/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SubmissionsSubmissions4Route: typeof SubmissionsSubmissions4Route
  SubmissionsSubmissions5Route: typeof SubmissionsSubmissions5Route
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersAddRoute: typeof UsersAddRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SubmissionsSubmissions4Route: SubmissionsSubmissions4Route,
  SubmissionsSubmissions5Route: SubmissionsSubmissions5Route,
  UsersUserIdRoute: UsersUserIdRoute,
  UsersAddRoute: UsersAddRoute,
  UsersIndexRoute: UsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Submissions/Submissions4",
        "/Submissions/Submissions5",
        "/users/$userId",
        "/users/add",
        "/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Submissions/Submissions4": {
      "filePath": "Submissions/Submissions4.tsx"
    },
    "/Submissions/Submissions5": {
      "filePath": "Submissions/Submissions5.tsx"
    },
    "/users/$userId": {
      "filePath": "users/$userId.tsx"
    },
    "/users/add": {
      "filePath": "users/add.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
